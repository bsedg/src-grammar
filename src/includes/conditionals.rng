<grammar xmlns="http://relaxng.org/ns/structure/1.0" 
	  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
	   ns="http://www.sdml.info/srcML/src" 
	    >

	     <a:documentation>
	     RELAX NG schema for base definitions of srcML switch elements

	     Brandon Sedgwick
	     bmsedgwick@gmail.com
	     2013
	      </a:documentation>

	      <a:documentation>
		if (numbers[i] == inputs[i]) {
		
	      </a:documentation>

   <define name="if">
      <element name="if">
         <text/>
	  <element name="condition">
	  	   <text/>
		   <zeroOrMore>
			<choice>
				<text/>
				<ref name="expression_statement"/>
				<ref name="expression"/>
			</choice>
		   </zeroOrMore>
	  </element>
	  <element name="then">
		 <ref name="ifblock"/>
	  </element>
	 <zeroOrMore>
		<choice>
			<text/>
			<element name="else">
			 	<text/>
				<ref name="ifblock"/>
			</element>
		</choice>
	</zeroOrMore>
	</element> <!-- ending if -->
   </define>

   <define name="ifblock">
	   <optional><text/></optional>
	   <choice>
	   <element name="block">
	      <optional><text/></optional>
	      <ref name="anyElement"/>
		<optional><text/></optional>
	   </element>
	   <ref name="expression_statement"/>
	   </choice>
	   <optional><text/></optional>
   </define>

   <define name="ifexpression">
   	   <element name="expr">
	   	    <element name="name">
		    	     <text/>
		    	     <element name="name">
			     	      <text/>
			     </element>
			     <element name="index">
			     	      <text/>
				      <element name="expr">
				      	       <element name="name">
					       		<text/>
					       </element>
				      </element>
				      <text/>
			     </element>
		    </element>
	   </element>
   </define>

   <define name="anyElement">
   <element>
   <anyName/>
   <zeroOrMore>
   <choice>
	<attribute>
		<anyName/>
			</attribute>
				<text/>
					<ref name="anyElement"/>
					</choice>
					</zeroOrMore>
					</element>
    </define>

  <define name="switch">
      <element name="switch">
      	       <text/>
      	       <ref name="condition"/>
		<element name="block">
			 <text/>
			 <oneOrMore>
				<ref name="case"/>
			 </oneOrMore>
			 <optional><text/></optional>
			 <ref name="default"/>
		</element>
		<optional><text/></optional>
	</element>
  </define>

  <define name="condition">
  	  <element name="condition">
	  	   <optional><text/></optional>
	  	   <element name="expr">
		   	    <element name="name">
			    	     <text/>
			    </element>
		   </element>
		   <optional><text/></optional>
	  </element>
  </define>

  <define name="default">
	  <element name="default">
	  	   <oneOrMore>
			<choice>
				<text/>
		   		<ref name="expression_statement"/>
			</choice>
		   </oneOrMore>
		   <optional>
			<element name="break">
		   	    <text/>
		   	</element>
		   </optional>
	  </element>
	  <text/>
  </define>

  <define name="case">
  	  <element name="case">
	  	   <text/>
		   <element name="expr">
	  	   	<oneOrMore>
				<choice>
					<element name="name">
						 <text/>
					</element>
					<text/>
                               		<ref name="expression_statement"/>
                       		</choice>
                  	</oneOrMore>
		  	<text/>
                  </element>
		   <oneOrMore>
			<choice>
				<text/>
		   		<ref name="expression_statement"/>
			</choice>
		   </oneOrMore>
		   <optional>
			<element name="break">
		   	    <text/>
		   	</element>
		   </optional>
	  </element>
  </define>
</grammar>

